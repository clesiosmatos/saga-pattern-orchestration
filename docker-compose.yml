services:
  orders-service:
    container_name: orders-service
    image: orders-service
    build:
      context: ./orders-service
      dockerfile: Dockerfile.dev
    ports:
      - "3331:3000"
    volumes:
      - ./orders-service:/usr/src/app
    environment:
      - NODE_ENV=development
    depends_on:
      - kafka
    networks:
      - default
  
  stock-service:
    container_name: stock-service
    image: stock-service
    build:
      context: ./stock-service
      dockerfile: Dockerfile.dev
    ports:
      - "3332:3000"
    volumes:
      - ./stock-service:/usr/src/app
    environment:
      - NODE_ENV=development
    networks:
      - default

  payment-service:
    container_name: payment-service
    image: payment-service
    build:
      context: ./payment-service
      dockerfile: Dockerfile.dev
    ports:
      - "3333:3000"
    volumes:
      - ./payment-service:/usr/src/app
    environment:
      - NODE_ENV=development
    networks:
      - default

  orchestration-service:
    container_name: orchestration-service
    image: orchestration-service
    build:
      context: ./orchestration-service
      dockerfile: Dockerfile.dev
    ports:
      - "3334:3000"
    volumes:
      - ./orchestration-service:/usr/src/app
    environment:
      - NODE_ENV=development
    networks:
      - default

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'
    networks:
        - default

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    depends_on:
      - zookeeper
    networks:
      - default

networks:
  default:
    driver: bridge